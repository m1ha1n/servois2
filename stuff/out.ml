{name="HashTable";
preds=[PredSig ("=", [TInt; TInt]); PredSig ("=", [TGeneric "E"; TGeneric "E"]); PredSig ("=", [TGeneric "F"; TGeneric "F"]); PredSig ("=", [TSet (TGeneric "E"); TSet (TGeneric "E")]); PredSig ("=", [TArray (TGeneric "E", TGeneric "F"); TArray (TGeneric "E", TGeneric "F")]); PredSig ("member", [TGeneric "E"; TSet (TGeneric "E")])];
state_eq=ELop (And, [EBop (Eq, EVar (Var "keys"), EVar (VarPost "keys")); EBop (Eq, EVar (Var "H"), EVar (VarPost "H")); EBop (Eq, EVar (Var "size"), EVar (VarPost "size"))]);
state=[(Var "keys", TSet (TGeneric "E")); (Var "H", TArray (TGeneric "E", TGeneric "F")); (Var "size", TInt)];
methods=[{name="haskey";
args=[(Var "k0", TGeneric "E")];
ret=[(Var "result", TBool)];
pre=EConst (CBool true);
post=EConst (CBool true);
terms=[(TInt, [EVar (Var "size")]); (TGeneric "E", [EVar (Var "k0")]); (TSet (TGeneric "E"), [EVar (Var "keys")]); (TArray (TGeneric "E", TGeneric "F"), [EVar (Var "H")])]}; {name="remove";
args=[(Var "v", TGeneric "E")];
ret=[(Var "result", TBool)];
pre=EConst (CBool true);
post=EConst (CBool true);
terms=[(TInt, [EVar (Var "size"); EConst (CInt 1); EBop (Sub, EVar (Var "size"), EConst (CInt 1))]); (TGeneric "E", [EVar (Var "v")]); (TSet (TGeneric "E"), [EVar (Var "keys"); EFunc ("singleton", [EVar (Var "v")]); EFunc ("setminus", [EVar (Var "keys"); EFunc ("singleton", [EVar (Var "v")])])]); (TArray (TGeneric "E", TGeneric "F"), [EVar (Var "H")])]}; {name="put";
args=[(Var "k0", TGeneric "E"); (Var "v0", TGeneric "F")];
ret=[(Var "result", TBool)];
pre=EConst (CBool true);
post=EConst (CBool true);
terms=[(TInt, [EVar (Var "size"); EConst (CInt 1); ELop (Add, [EVar (Var "size"); EConst (CInt 1)])]); (TGeneric "E", [EVar (Var "k0")]); (TGeneric "F", [EVar (Var "v0"); EFunc ("select", [EVar (Var "H"); EVar (Var "k0")])]); (TSet (TGeneric "E"), [EVar (Var "keys"); EFunc ("insert", [EVar (Var "k0"); EVar (Var "keys")])]); (TArray (TGeneric "E", TGeneric "F"), [EVar (Var "H"); EFunc ("store", [EVar (Var "H"); EVar (Var "k0"); EVar (Var "v0")])])]}; {name="get";
args=[(Var "k0", TGeneric "E")];
ret=[(Var "result", TGeneric "F")];
pre=EFunc ("member", [EVar (Var "k0"); EVar (Var "keys")]);
post=ELop (And, [EBop (Eq, EVar (VarPost "keys"), EVar (Var "keys")); EBop (Eq, EVar (VarPost "H"), EVar (Var "H")); EBop (Eq, EVar (VarPost "size"), EVar (Var "size")); EBop (Eq, EFunc ("select", [EVar (Var "H"); EVar (Var "k0")]), EVar (Var "result"))]);
terms=[(TInt, [EVar (Var "size")]); (TGeneric "E", [EVar (Var "k0")]); (TGeneric "F", [EFunc ("select", [EVar (Var "H"); EVar (Var "k0")])]); (TSet (TGeneric "E"), [EVar (Var "keys")]); (TArray (TGeneric "E", TGeneric "F"), [EVar (Var "H")])]}; {name="size";
args=[];
ret=[(Var "result", TInt)];
pre=EConst (CBool true);
post=ELop (And, [EBop (Eq, EVar (VarPost "keys"), EVar (Var "keys")); EBop (Eq, EVar (VarPost "H"), EVar (Var "H")); EBop (Eq, EVar (VarPost "size"), EVar (Var "size")); EBop (Eq, EVar (Var "size"), EVar (Var "result"))]);
terms=[(TInt, [EVar (Var "size")]); (TSet (TGeneric "E"), [EVar (Var "keys")]); (TArray (TGeneric "E", TGeneric "F"), [EVar (Var "H")])]}]}
